// 广度优先搜索是一种对图进行搜索的算法。
// 假设我们一开始位于某个结点（即起点），此时并不知道图的整体结构，而我们的目的是从起点开始顺着边搜索，直到到达指定顶点（即终点）。在此过程中每走到一个顶点，就会判断一次它是否为终点。广度优先搜索会优先从离起点近的顶点开始搜索。
// 注意: 一般说图才说遍历，树之类的话是搜索，其实是一样的

/*
            1
      2     3       4
    5  6    8    10   11
    7       9         12
*/

/* 
  广度优先搜索的思路：
  1. 遍历顺序 1 -> 2 -> 3 -> 4 没找到，同时7是终点，在栈中弹出7，5也没有其他未标记的子节点，弹出5，此时栈为[1, 2]
  2. 遍历顺序 1 -> 2 -> 5 -> 7 -> 6，6和2都没有未标记的子节点，弹出2和6，此时栈为[1]
  ...
  到最后连顶点1都没有未标记的子节点了，则把1也弹出了，栈为空，搜索结束
  最终遍历顺序是 1 -> 2 -> 5 -> 7 -> 6 -> 3 -> 8 -> 9 -> 4 -> 10 -> 11 -> 12

*/